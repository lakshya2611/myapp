{"version":3,"sources":["Components/Navbar.js","Components/TextArea.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","name","autocomplete","onClick","toggleModeLight","htmlFor","toggleModeDark","toggleModeGreen","toggleModeRed","TextArea","useState","text","setText","heading","style","backgroundColor","border","value","onChange","event","target","rows","btnMode","newText","toUpperCase","showalt","toLowerCase","replace","length","split","alert","alt","msg","defaultProps","about","App","setMode","setbtnMode","setalert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e7b88f0.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className= {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse text-dark\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" to=\"/about\">{props.about}</Link>\r\n              </li> */}\r\n            </ul>\r\n\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n\r\n              <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\"/>\r\n              <label className=\"btn btn-outline-primary\" onClick={props.toggleModeLight} htmlFor=\"btnradio1\">Light Mode</label>\r\n\r\n              <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\"/>\r\n              <label className=\"btn btn-outline-primary\" onClick={props.toggleModeDark} htmlFor=\"btnradio2\">Dark Mode</label>\r\n\r\n              <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"btnradio3\" autocomplete=\"off\"/>\r\n              <label className=\"btn btn-outline-primary\" onClick={props.toggleModeGreen} htmlFor=\"btnradio3\">Green Mode</label>\r\n\r\n              <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"btnradio4\" autocomplete=\"off\"/>\r\n              <label className=\"btn btn-outline-primary\" onClick={props.toggleModeRed} htmlFor=\"btnradio4\">Red Mode</label>\r\n\r\n          </div>\r\n\r\n            </div>\r\n          </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string,\r\n    about : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title : \"Enter Title\",\r\n  about : \"About Us\"\r\n}","import React ,{useState} from 'react'\r\n\r\nexport default function TextArea(props) {\r\n\r\n    const [text,setText] = useState(\"\");\r\n    // const auxVerb = ['be', 'can', 'could', 'dare', 'do', 'have', 'may', 'might', 'must', 'need', 'ought', 'shall', 'should', 'will', \"would\"];\r\n\r\n    const UppercaseChanged = ()=>\r\n    {  \r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showalt(\"Changed to Upper Case\",\"success\");\r\n    }\r\n\r\n    const lowercaseChanged = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showalt(\"Changed to Lower Case\",\"success\");\r\n    }\r\n\r\n    // const printAuxVerb = ()=>{\r\n    //     let count =0;\r\n    //     // let newtext = text.charAt(0).toUpperCase()+text.substring(1,text.length); (for capitalize first letter)\r\n    //     let arr = text.split(\" \");\r\n    //     for(let i =0;i<arr.length;i++)\r\n    //     {\r\n    //         for(let j=0;i<auxVerb.length;j++)\r\n    //         {\r\n    //             if(arr[i] === auxVerb[i])\r\n    //             {\r\n    //                 count++;\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     console.log(count);\r\n\r\n    //     // setText(newtext);\r\n    // }\r\n\r\n    const ClearChanged = ()=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showalt(\"Text has been cleared\",\"success\");\r\n    }\r\n\r\n    const removeSpace = ()=>{\r\n        let newText = text.replace(/\\s{2,}/g,'');\r\n        setText(newText);\r\n        props.showalt(\"All the extra space has been removed\",\"success\");\r\n    }\r\n\r\n    const HandleChange = (event)=>{\r\n\r\n        setText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={`container mb-3 text-${props.mode ==='light'?'dark':'light'}`}>\r\n            <h2>{props.heading}</h2>\r\n            <textarea className={`form-control text-${props.mode=== 'light'?'dark':'light'}`} style={{backgroundColor:props.mode=== 'light'?'white':'#212529',border:props.mode=== 'light'?'1px solid black':'1px solid white'}} value = {text} onChange = {HandleChange} id=\"box\" rows=\"10\"></textarea>\r\n            <button className={`btn btn-${props.btnMode} my-2 mx-3`} onClick= {UppercaseChanged}>Convert to UPPERCASE</button>\r\n            <button className={`btn btn-${props.btnMode} my-2 mx-3`} onClick= {lowercaseChanged}>Convert to lowercase</button>\r\n            <button className={`btn btn-${props.btnMode} my-2 mx-3`} onClick= {removeSpace}>Remove extra space</button>\r\n            {/* <button className=\"btn btn-primary my-3 mx-3\" onClick= {printAuxVerb}>Print Auxillary Verb</button> */}\r\n            <button className={`btn btn-${props.btnMode} my-2 mx-3`} onClick= {ClearChanged}>Clear</button>\r\n        </div>\r\n\r\n        <div className={`container text-${props.mode=== 'light'?'dark':'light'}`}>\r\n            <h2>Your Text Summary</h2>\r\n            <h5>{(text.length === 0) ? text.split(\" \").length-1 : text.split(\" \").length} words and {text.length} no. of characters</h5>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function alert(props) {\r\n\r\n    // const capitalize = (word) =>{\r\n    //     return word.charAt(0).toUpperCase() + word.slice(1); \r\n    // }\r\n\r\n    return (\r\n        props.alt && <div className={`alert alert-${props.alt.type} alert-dismissible fade show`} role=\"alert\">\r\n            <b>{props.alt.type}</b> {props.alt.msg}\r\n        </div>\r\n    )\r\n\r\n}\r\n","import './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React ,{useState} from 'react'\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [btnMode, setbtnMode] = useState('primary')\n  \n  const toggleModeDark = ()=>{\n \n      setMode('dark')\n      setbtnMode('secondary')\n      document.body.style.backgroundColor = \"#212529\"\n      showAlert(\"Dark Mode Enabled\",\"success\")\n    }\n\n  const toggleModeLight = ()=>{\n \n      setMode('light')\n      setbtnMode('primary')\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\"Light Mode Enabled\",\"success\")\n    }\n\n  const toggleModeGreen = ()=>{\n\n      setMode('light')\n      setbtnMode('info')\n      document.body.style.backgroundColor = \"green\"\n      showAlert(\"Green Mode Enabled\",\"success\")\n    }\n\n  const toggleModeRed = ()=>{\n  \n      setMode('light')\n      setbtnMode('warning')\n      document.body.style.backgroundColor = \"red\"\n      showAlert(\"Red Mode Enabled\",\"success\")\n    }\n\n  const [alert, setalert] = useState(null);\n  \n  const showAlert = (message,type)=>{\n\n    setTimeout(() => {\n      showAlert(null);\n    }, 2000);\n\n    setalert({\n      msg:message,\n      type:type\n    })\n  }\n\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleModeDark = {toggleModeDark} toggleModeGreen = {toggleModeGreen} toggleModeRed = {toggleModeRed} toggleModeLight = {toggleModeLight} />\n    <Alert alt={alert}/>\n    <div className=\"container my-3\">\n\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n\n          <Route exact path=\"/\"> */}\n    <TextArea showalt ={showAlert} btnMode ={btnMode} heading =\"Enter Your Text Here ! \" mode ={mode}/>\n          {/* </Route>\n    </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}